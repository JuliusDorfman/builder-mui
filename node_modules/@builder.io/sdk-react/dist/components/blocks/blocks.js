"use client";
import * as React from "react";
import { useContext } from "react";
import BlockStyles from "../block/components/block-styles";
import Block from "../block/block";
import BlocksWrapper from "./blocks-wrapper";
import BuilderContext from "../../context/builder.context.js";
import ComponentsContext from "../../context/components.context.js";
function Blocks(props) {
    const builderContext = useContext(BuilderContext);
    const componentsContext = useContext(ComponentsContext);
    return (React.createElement(BlocksWrapper, { blocks: props.blocks, parent: props.parent, path: props.path, styleProp: props.styleProp },
        props.blocks ? (React.createElement(React.Fragment, null, props.blocks?.map((block) => (React.createElement(Block, { key: "render-block-" + block.id, block: block, context: props.context || builderContext, registeredComponents: props.registeredComponents ||
                componentsContext.registeredComponents }))))) : null,
        props.blocks ? (React.createElement(React.Fragment, null, props.blocks?.map((block) => (React.createElement(BlockStyles, { key: "block-style-" + block.id, block: block, context: props.context || builderContext }))))) : null));
}
export default Blocks;
